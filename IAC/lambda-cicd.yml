AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  GitHubRepoUrl:
    Type: String
    Description: URL of the GitHub repository containing the Lambda function code
  GitHubBranch:
    Type: String
    Description: Branch name of the GitHub repository
  GitHubToken:
    Type: String
    Description: GitHub personal access token

Resources:
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: LambdaFunctionPipeline
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Sub ${GitHubRepoUrl}
                Repo: !Sub ${GitHubRepoUrl}
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: Lambda
                Version: 1
              Configuration:
                FunctionName: !Ref LambdaFunction
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: !Ref CodeBuildProject

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: LambdaFunctionBuild
      Description: CodeBuild project for building Lambda function
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.8
              commands:
                - echo "Installing dependencies"
                - pip install --upgrade awscli boto3
            build:
              commands:
                - echo "Building Lambda function"
                - cd lambda-function
                - aws lambda update-function-code --function-name <LAMBDA_FUNCTION_NAME> --zip-file fileb://lambda-function.zip

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:UpdateFunctionCode
                Resource: '*'

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: MyLambdaFunction
      Runtime: python3.8
      Handler: index.handler
      Role: arn:aws:iam::655652197014:role/service-role/test-function-role-ddw9v2s0  # Replace with the actual IAM role ARN
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: lambda_function.zip

  LambdaCodeBucket:
    Type: AWS::S3::Bucket